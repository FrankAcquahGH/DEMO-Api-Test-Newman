name: Run Postman Collection with Newman

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 15 * * *' # Runs daily at 3:00 PM GMT
  workflow_dispatch: # Allows manual trigger

jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install Newman, reporters, and allure-commandline
      - name: Install Newman and reporters
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
          npm install -g newman-reporter-allure
          npm install -g allure-commandline
        continue-on-error: false

      # Verify installations
      - name: Verify installations
        run: |
          newman --version
          allure --version
        continue-on-error: false

      # Create directory for test results
      - name: Make directory for results
        run: mkdir -p testResults

      # Run Postman collection with Newman
      - name: Run Postman Collection
        run: |
          newman run Regression-testing.postman_collection.json \
            -r htmlextra,allure,cli \
            --reporter-htmlextra-export testResults/htmlreport.html \
            --reporter-htmlextra-darkTheme \
            --reporter-allure-export testResults/allure-results
        continue-on-error: false

      # Debug: Check if allure-results directory has files
      - name: Debug allure-results
        run: |
          ls -la testResults/allure-results || echo "No files found in testResults/allure-results"
        continue-on-error: true

      # Generate Allure report if allure-results exists
      - name: Generate Allure report
        if: always()
        run: |
          if [ -d "testResults/allure-results" ] && [ "$(ls -A testResults/allure-results)" ]; then
            allure generate testResults/allure-results -o testResults/allure-report
          else
            echo "No Allure results to generate report from."
          fi
        continue-on-error: true

      # Upload HTML test results as artifacts
      - name: Upload HTML test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Postman-HTML-Report
          path: testResults/htmlreport.html
          retention-days: 7
        continue-on-error: true

      # Upload raw Allure results as artifacts if they exist
      - name: Upload raw Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Results
          path: testResults/allure-results/
          retention-days: 7
          if-no-files-found: ignore # Prevents failure if directory is empty
        continue-on-error: true

      # Upload generated Allure report as artifacts if it exists
      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Report
          path: testResults/allure-report/
          retention-days: 7
          if-no-files-found: ignore # Prevents failure if directory is empty
        continue-on-error: true
